##########################################################
# invalid command
##########################################################

  # should recognise invalid command
  sfdfd

##########################################################
# commands using list index before any listing created
##########################################################

  # should show appropriate message when no listing has happened yet
  delete 1
  view 1
  viewall 1

##########################################################
# test sort command
##########################################################
  #should return empty list message
  sort

  #add person to the list
  add name p/123345 e/valid@email a/valid
  add apple p/35566 e/valid@email.com a/valid address
  add zoo p/345677 e/sdf@fsfdd a/cwfd
  add zack p/34653 e/sdfvv@rf a/dfe

  #should successfully sort and display list
  sort

 ##########################################################
 # test modify information command
 ##########################################################
 # should catch invalid index
 change 1 p/12353

 #should catch invalid field
 list
 change 1 t/sfdv
 change 1 sdfwef

 #should successfully modify and display message
 list
 change 1 a/valid address

##########################################################
# clean and check state
##########################################################

  # address book should be emptied
  clear
  list

##########################################################
# test add person command, setup state for futuer tests
##########################################################

  # should catch invalid args format
  add wrong args wrong args
  add Valid Name 12345 e/valid@email.butNoPhonePrefix a/valid, address
  add Valid Name p/12345 valid@email.butNoPrefix a/valid, address
  add Valid Name p/12345 e/valid@email.butNoAddressPrefix valid, address
  add Valid Name p/12345 e/valid@email.butNoTagPrefix a/valid, address t/goodTag noPrefixTag
  
  # should catch invalid person data
  add []\[;] p/12345 e/valid@e.mail a/valid, address
  add Valid Name p/not_numbers e/valid@e.mail a/valid, address
  add Valid Name p/12345 e/notAnEmail a/valid, address
  add Valid Name p/12345 e/valid@e.mail a/valid, address t/invalid_-[.tag

  # should add correctly and list non private information
  add Adam Brown p/111111 e/adam@gmail.com a/111, alpha street
  list
  add Betsy Choo pp/222222 pe/benchoo@nus.edu.sg pa/222, beta street t/secretive
  list
  add Charlie Dickson pp/333333 e/charlie.d@nus.edu.sg a/333, gamma street t/friends t/school
  list
  add Dickson Ee p/444444 pe/dickson@nus.edu.sg a/444, delta street t/friends
  list
  add Esther Potato p/555555 e/esther@not.a.real.potato pa/555, epsilon street t/tubers t/starchy
  list

  # should not allow adding duplicate persons
  add Esther Potato p/555555 e/esther@not.a.real.potato pa/555, epsilon street t/tubers t/starchy

##########################################################
# test view/viewall persons command
##########################################################

  # should catch invalid args format
  view
  viewall
  view should be only one number
  viewall should only be one number

  # should catch invalid index
  view -1
  view 0
  view 6
  viewall -1
  viewall 0
  viewall 6

  # should show all non private for both view and viewall
  view 1
  viewall 1

  # should show only non private details for view
  view 3
  view 4
  view 5

  # should show all details even private for viewall
  viewall 3
  viewall 4
  viewall 5

##########################################################
# test find persons command
##########################################################

  # should consider no keywords as invalid command format
  find
  # should only match full words in person names
  find bet
  # does not match if none have keyword
  find 23912039120
  # matching should be case-sensitive
  find betsy

  # find unique keyword
  find Betsy
  # find multiple with same keyword
  find Dickson
  # find multiple with some keywords
  find Charlie Betsy

##########################################################
# test delete person command
##########################################################

# last active view: [1] betsy [2] charlie

  # should catch invalid args format
  delete
  delete should be only one number

  # should catch invalid index
  delete -1
  delete 0
  delete 3

  # should catch attempt to delete something already deleted
  delete 2
  delete 2

  # should catch attempt to view something already deleted
  view 2
  viewall 2

  # should have deleted based on last active view's index
  list

  # deletes correct person
  delete 4
  list

  # listing indexes get updated on next request
  delete 1
  list

##########################################################
# test clear command
##########################################################

  # clears all
  clear
  list

##########################################################
# test exit command
##########################################################

  # exits properly
  exit
  list